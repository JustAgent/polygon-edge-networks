/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { BaseToken, BaseTokenInterface } from "../../contracts/BaseToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "address",
        name: "main",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200254438038062002544833981810160405281019062000037919062000711565b828281600390816200004a9190620009f6565b5080600490816200005c9190620009f6565b5050506200007f62000073620000d060201b60201c565b620000d860201b60201c565b6200009433620f42406200019e60201b60201c565b620000c6817f40000000000000000000000000000000000000000000000000000000000000006200030b60201b60201c565b5050505062000d28565b600033905090565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160362000210576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620002079062000b3e565b60405180910390fd5b62000224600083836200033e60201b60201c565b806002600082825462000238919062000b8f565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051620002eb919062000bdb565b60405180910390a362000307600083836200034360201b60201c565b5050565b6000806200031e620000d060201b60201c565b9050620003338185856200034860201b60201c565b600191505092915050565b505050565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603620003ba576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620003b19062000c6e565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036200042c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620004239062000d06565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516200050c919062000bdb565b60405180910390a3505050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620005828262000537565b810181811067ffffffffffffffff82111715620005a457620005a362000548565b5b80604052505050565b6000620005b962000519565b9050620005c7828262000577565b919050565b600067ffffffffffffffff821115620005ea57620005e962000548565b5b620005f58262000537565b9050602081019050919050565b60005b838110156200062257808201518184015260208101905062000605565b60008484015250505050565b6000620006456200063f84620005cc565b620005ad565b90508281526020810184848401111562000664576200066362000532565b5b6200067184828562000602565b509392505050565b600082601f8301126200069157620006906200052d565b5b8151620006a38482602086016200062e565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620006d982620006ac565b9050919050565b620006eb81620006cc565b8114620006f757600080fd5b50565b6000815190506200070b81620006e0565b92915050565b6000806000606084860312156200072d576200072c62000523565b5b600084015167ffffffffffffffff8111156200074e576200074d62000528565b5b6200075c8682870162000679565b935050602084015167ffffffffffffffff81111562000780576200077f62000528565b5b6200078e8682870162000679565b9250506040620007a186828701620006fa565b9150509250925092565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620007fe57607f821691505b602082108103620008145762000813620007b6565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026200087e7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826200083f565b6200088a86836200083f565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620008d7620008d1620008cb84620008a2565b620008ac565b620008a2565b9050919050565b6000819050919050565b620008f383620008b6565b6200090b6200090282620008de565b8484546200084c565b825550505050565b600090565b6200092262000913565b6200092f818484620008e8565b505050565b5b8181101562000957576200094b60008262000918565b60018101905062000935565b5050565b601f821115620009a65762000970816200081a565b6200097b846200082f565b810160208510156200098b578190505b620009a36200099a856200082f565b83018262000934565b50505b505050565b600082821c905092915050565b6000620009cb60001984600802620009ab565b1980831691505092915050565b6000620009e68383620009b8565b9150826002028217905092915050565b62000a0182620007ab565b67ffffffffffffffff81111562000a1d5762000a1c62000548565b5b62000a298254620007e5565b62000a368282856200095b565b600060209050601f83116001811462000a6e576000841562000a59578287015190505b62000a658582620009d8565b86555062000ad5565b601f19841662000a7e866200081a565b60005b8281101562000aa85784890151825560018201915060208501945060208101905062000a81565b8683101562000ac8578489015162000ac4601f891682620009b8565b8355505b6001600288020188555050505b505050505050565b600082825260208201905092915050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b600062000b26601f8362000add565b915062000b338262000aee565b602082019050919050565b6000602082019050818103600083015262000b598162000b17565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600062000b9c82620008a2565b915062000ba983620008a2565b925082820190508082111562000bc45762000bc362000b60565b5b92915050565b62000bd581620008a2565b82525050565b600060208201905062000bf2600083018462000bca565b92915050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b600062000c5660248362000add565b915062000c638262000bf8565b604082019050919050565b6000602082019050818103600083015262000c898162000c47565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b600062000cee60228362000add565b915062000cfb8262000c90565b604082019050919050565b6000602082019050818103600083015262000d218162000cdf565b9050919050565b61180c8062000d386000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c8063715018a611610097578063a457c2d711610066578063a457c2d714610276578063a9059cbb146102a6578063dd62ed3e146102d6578063f2fde38b14610306576100f5565b8063715018a6146102145780638da5cb5b1461021e57806395d89b411461023c578063a0712d681461025a576100f5565b806323b872dd116100d357806323b872dd14610166578063313ce5671461019657806339509351146101b457806370a08231146101e4576100f5565b806306fdde03146100fa578063095ea7b31461011857806318160ddd14610148575b600080fd5b610102610322565b60405161010f9190610f28565b60405180910390f35b610132600480360381019061012d9190610fe3565b6103b4565b60405161013f919061103e565b60405180910390f35b6101506103d7565b60405161015d9190611068565b60405180910390f35b610180600480360381019061017b9190611083565b6103e1565b60405161018d919061103e565b60405180910390f35b61019e610410565b6040516101ab91906110f2565b60405180910390f35b6101ce60048036038101906101c99190610fe3565b610419565b6040516101db919061103e565b60405180910390f35b6101fe60048036038101906101f9919061110d565b610450565b60405161020b9190611068565b60405180910390f35b61021c610498565b005b6102266104ac565b6040516102339190611149565b60405180910390f35b6102446104d6565b6040516102519190610f28565b60405180910390f35b610274600480360381019061026f9190611164565b610568565b005b610290600480360381019061028b9190610fe3565b61057d565b60405161029d919061103e565b60405180910390f35b6102c060048036038101906102bb9190610fe3565b6105f4565b6040516102cd919061103e565b60405180910390f35b6102f060048036038101906102eb9190611191565b610617565b6040516102fd9190611068565b60405180910390f35b610320600480360381019061031b919061110d565b61069e565b005b60606003805461033190611200565b80601f016020809104026020016040519081016040528092919081815260200182805461035d90611200565b80156103aa5780601f1061037f576101008083540402835291602001916103aa565b820191906000526020600020905b81548152906001019060200180831161038d57829003601f168201915b5050505050905090565b6000806103bf610721565b90506103cc818585610729565b600191505092915050565b6000600254905090565b6000806103ec610721565b90506103f98582856108f2565b61040485858561097e565b60019150509392505050565b60006012905090565b600080610424610721565b90506104458185856104368589610617565b6104409190611260565b610729565b600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6104a0610bf4565b6104aa6000610c72565b565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600480546104e590611200565b80601f016020809104026020016040519081016040528092919081815260200182805461051190611200565b801561055e5780601f106105335761010080835404028352916020019161055e565b820191906000526020600020905b81548152906001019060200180831161054157829003601f168201915b5050505050905090565b610570610bf4565b61057a3382610d38565b50565b600080610588610721565b905060006105968286610617565b9050838110156105db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d290611306565b60405180910390fd5b6105e88286868403610729565b60019250505092915050565b6000806105ff610721565b905061060c81858561097e565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6106a6610bf4565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610715576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070c90611398565b60405180910390fd5b61071e81610c72565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610798576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078f9061142a565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610807576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107fe906114bc565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516108e59190611068565b60405180910390a3505050565b60006108fe8484610617565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610978578181101561096a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161096190611528565b60405180910390fd5b6109778484848403610729565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036109ed576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109e4906115ba565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a5c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a539061164c565b60405180910390fd5b610a67838383610e8e565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610aed576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ae4906116de565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610bdb9190611068565b60405180910390a3610bee848484610e93565b50505050565b610bfc610721565b73ffffffffffffffffffffffffffffffffffffffff16610c1a6104ac565b73ffffffffffffffffffffffffffffffffffffffff1614610c70576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c679061174a565b60405180910390fd5b565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610da7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d9e906117b6565b60405180910390fd5b610db360008383610e8e565b8060026000828254610dc59190611260565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610e769190611068565b60405180910390a3610e8a60008383610e93565b5050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610ed2578082015181840152602081019050610eb7565b60008484015250505050565b6000601f19601f8301169050919050565b6000610efa82610e98565b610f048185610ea3565b9350610f14818560208601610eb4565b610f1d81610ede565b840191505092915050565b60006020820190508181036000830152610f428184610eef565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610f7a82610f4f565b9050919050565b610f8a81610f6f565b8114610f9557600080fd5b50565b600081359050610fa781610f81565b92915050565b6000819050919050565b610fc081610fad565b8114610fcb57600080fd5b50565b600081359050610fdd81610fb7565b92915050565b60008060408385031215610ffa57610ff9610f4a565b5b600061100885828601610f98565b925050602061101985828601610fce565b9150509250929050565b60008115159050919050565b61103881611023565b82525050565b6000602082019050611053600083018461102f565b92915050565b61106281610fad565b82525050565b600060208201905061107d6000830184611059565b92915050565b60008060006060848603121561109c5761109b610f4a565b5b60006110aa86828701610f98565b93505060206110bb86828701610f98565b92505060406110cc86828701610fce565b9150509250925092565b600060ff82169050919050565b6110ec816110d6565b82525050565b600060208201905061110760008301846110e3565b92915050565b60006020828403121561112357611122610f4a565b5b600061113184828501610f98565b91505092915050565b61114381610f6f565b82525050565b600060208201905061115e600083018461113a565b92915050565b60006020828403121561117a57611179610f4a565b5b600061118884828501610fce565b91505092915050565b600080604083850312156111a8576111a7610f4a565b5b60006111b685828601610f98565b92505060206111c785828601610f98565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061121857607f821691505b60208210810361122b5761122a6111d1565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061126b82610fad565b915061127683610fad565b925082820190508082111561128e5761128d611231565b5b92915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b60006112f0602583610ea3565b91506112fb82611294565b604082019050919050565b6000602082019050818103600083015261131f816112e3565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611382602683610ea3565b915061138d82611326565b604082019050919050565b600060208201905081810360008301526113b181611375565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000611414602483610ea3565b915061141f826113b8565b604082019050919050565b6000602082019050818103600083015261144381611407565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b60006114a6602283610ea3565b91506114b18261144a565b604082019050919050565b600060208201905081810360008301526114d581611499565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b6000611512601d83610ea3565b915061151d826114dc565b602082019050919050565b6000602082019050818103600083015261154181611505565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b60006115a4602583610ea3565b91506115af82611548565b604082019050919050565b600060208201905081810360008301526115d381611597565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000611636602383610ea3565b9150611641826115da565b604082019050919050565b6000602082019050818103600083015261166581611629565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b60006116c8602683610ea3565b91506116d38261166c565b604082019050919050565b600060208201905081810360008301526116f7816116bb565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000611734602083610ea3565b915061173f826116fe565b602082019050919050565b6000602082019050818103600083015261176381611727565b9050919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b60006117a0601f83610ea3565b91506117ab8261176a565b602082019050919050565b600060208201905081810360008301526117cf81611793565b905091905056fea26469706673582212204035dab0dc7cb3f6021c83182c99d798762fd495897b10d5027f6b2977b23f5464736f6c63430008110033";

type BaseTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BaseTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BaseToken__factory extends ContractFactory {
  constructor(...args: BaseTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    main: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BaseToken> {
    return super.deploy(
      _name,
      _symbol,
      main,
      overrides || {}
    ) as Promise<BaseToken>;
  }
  override getDeployTransaction(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    main: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_name, _symbol, main, overrides || {});
  }
  override attach(address: string): BaseToken {
    return super.attach(address) as BaseToken;
  }
  override connect(signer: Signer): BaseToken__factory {
    return super.connect(signer) as BaseToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BaseTokenInterface {
    return new utils.Interface(_abi) as BaseTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BaseToken {
    return new Contract(address, _abi, signerOrProvider) as BaseToken;
  }
}
